%% -*- mode: erlang; erlang-indent-level: 4; indent-tabs-mode: nil -*-
%% -------------------------------------------------------------------
%%
%% Copyright (c) 2017 Basho Technologies, Inc.
%%
%% This file is provided to you under the Apache License,
%% Version 2.0 (the "License"); you may not use this file
%% except in compliance with the License.  You may obtain
%% a copy of the License at
%%
%%   http://www.apache.org/licenses/LICENSE-2.0
%%
%% Unless required by applicable law or agreed to in writing,
%% software distributed under the License is distributed on an
%% "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
%% KIND, either express or implied.  See the License for the
%% specific language governing permissions and limitations
%% under the License.
%%
%% -------------------------------------------------------------------

{brt_protect, true}.

{erl_opts, [
  warn_bif_clash,
  warn_export_all,
  warn_export_vars,
  warn_obsolete_guard,
  warn_unused_import
]}.

{port_specs, [{"priv/erlang_js_drv.so", ["c_src/*.c"]}]}.

{port_env, [
  {"DRV_CFLAGS", "$DRV_CFLAGS -I c_src/system/include/js -DXP_UNIX -Wall"},
  {"DRV_LDFLAGS", "$DRV_LDFLAGS c_src/system/lib/libjs.a c_src/system/lib/libnspr4.a"},

  %% Define flags for enabling/disable 64 bit build of NSPR
  {"-32$", "NSPR_SIXTYFOUR", "--disable-64bit"},
  {"-64$", "NSPR_SIXTYFOUR", "--enable-64bit"},

  %% Solaris specific flags
  {"solaris.*", "DRV_LDFLAGS", "$DRV_LDFLAGS -lrt"},
  {"solaris.*-64$", "CFLAGS", "-m64"},
  {"solaris.*-64$", "LDFLAGS", "-m64"},

  %% OS X Leopard flags for 64-bit
  {"darwin9.*-64$", "CFLAGS", "-m64"},
  {"darwin9.*-64$", "LDFLAGS", "-arch x86_64"},

  %% OS X Snow Leopard flags for 32-bit
  {"darwin10.*-32$", "CFLAGS", "-m32"},
  {"darwin10.*-32$", "LDFLAGS", "-arch i386"},

  %% OS X Mountain Lion flags.
  {".*darwin12.4.*$", "CFLAGS", "-m64"},
  {".*darwin12.4.*$", "LDFLAGS", "-arch x86_64"},

  %% macOS Sierra flags.
  {".*darwin16.*$", "CFLAGS", "-m64"},
  {".*darwin16.*$", "LDFLAGS", "-arch x86_64"},

  {"R16B02_basho10|17", "DRV_CFLAGS", "$DRV_CFLAGS -DERL_EXIT"},

  %% Prevent the make->gmake transition from infecting
  %% MAKEFLAGS with bad flags that confuse gmake
  {"freebsd.*", "MAKEFLAGS", ""}

]}.

{pre_hooks, [
  {"(linux|darwin|solaris)",  compile,  "make -C c_src"},
  {"(freebsd)",               compile,  "gmake -C c_src"}
]}.

{post_hooks, [
  {"(linux|darwin|solaris)",  clean,  "make  -C c_src clean"},
  {"(freebsd)",               clean,  "gmake -C c_src clean"}
]}.


{profiles, [
  {check, [
    {dialyzer, [
      {plt_extra_apps, [xmerl]},
      {warnings, [
        error_handling,
        race_conditions,
        unknown,
        unmatched_returns
      ]}
    ]},
    {erl_opts, [
      debug_info,
      warnings_as_errors,
      {d, 'BASHO_CHECK'}
    ]},
    {xref_checks, [
      deprecated_function_calls,
      deprecated_functions,
      locals_not_used,
      undefined_function_calls,
      undefined_functions
    ]}
  ]},
  {docs, [
    {edoc_opts, [
      {app_default, "http://www.erlang.org/doc/man"},
      {preprocess, true},
      {macros, [
        {'EDOC', true},
        {'BASHO_DOCS', true}
      ]}
    ]}
  ]},
  {prod, [
    {erl_opts, [
      warnings_as_errors,
      {d, 'BASHO_PROD'}
    ]}
  ]},
  {test, [
    {cover_enabled, true},
    {erl_opts, [
      debug_info,
      nowarn_deprecated_function,
      nowarn_export_all,
      nowarn_unused_function,
      warnings_as_errors,
      {d, 'BASHO_TEST'}
    ]}
  ]},
  {validate, [
    {erl_opts, [
      strong_validation,
      no_auto_import,
      warn_bif_clash,
      warn_deprecated_function,
      warn_deprecated_type,
      warn_export_all,
      warn_export_vars,
      warn_missing_spec,
      warn_missing_spec_all,
      warn_obsolete_guard,
      warn_shadow_vars,
      warn_untyped_record,
      warn_unused_function,
      warn_unused_import,
      warn_unused_record,
      warn_unused_vars,
      {d, 'BASHO_VALIDATE'}
    ]}
  ]}
]}.

{plugins, [
  {basho_rebar_tools,
    {git, "https://github.com/basho/basho_rebar_tools.git",
      {branch, "master"} }},
  {pc,
    {git, "git@github.com:blt/port_compiler.git",
      {branch, "master"}}}
]}.

{provider_hooks, [
  {post, [{compile, {pc, compile}},
    {clean, {pc, clean}}]}
]}.
